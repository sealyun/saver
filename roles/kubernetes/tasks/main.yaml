---
- name: install docker and git
  yum: 
    name: "{{ packages }}"
  vars:
    packages:
    - docker
    - git

- name: fetch git scratch files and yaml files
  shell: '{{ item }}'
  with_items:
  - rm -rf /tmp/*
  - systemctl start docker
  - 'git clone {{ k8s_scratch_url }} /tmp/kubescratch'
  - mv /tmp/kubescratch/kube /tmp
  - 'wget -P /tmp {{ k8s_url }}'
  - 'wget -P /tmp {{ calico_url }}'
  - 'wget -P /tmp {{ sealos_url }}'
  - 'wget -P /tmp {{ super_kubeadm_url }}'
  - 'wget -P /tmp {{ kube_dashboard_url }}'

- name: "Add dashboard Nodeport"
  lineinfile:
     dest: "/tmp/kubernetes-dashboard.yaml"
     line: "  type: NodePort"
     insertafter: 'targetPort'
 
- name: "add dashboard nodeport"
  lineinfile:
     dest: "/tmp/kubernetes-dashboard.yaml"
     line: "      nodePort: 32000"
     insertafter: 'targetPort'

- name: move files
  shell: 'cd /tmp && {{ item }}'
  with_items:
  - tar zxvf kubernetes-node-linux-amd64.tar.gz
  - mkdir /tmp/kube/images
  - mv kubernetes/node/bin/kubectl kube/bin/
  - mv kubernetes/node/bin/kubelet kube/bin/
  - chmod +x kubeadm
  - chmod +x sealos
  - mv kubeadm kube/bin/
  - mv sealos kube/bin/
  - mv kubernetes-dashboard.yaml kube/conf/dashboard
  - docker pull fanux/lvscare:latest

#- name: using new kubeadm
#  shell: 'cd /tmp && {{ item }}'
#  with_items:
#      - 'docker rm -f kubeadm || true' 
#      - 'docker run --name kubeadm -d fanux/kubeadm:kubeadm-v{{ k8s_version }} sleep 10000' 
#      - 'docker cp kubeadm:/kubeadm /tmp/kube/bin'
#      - 'docker stop kubeadm || true'
#      - 'docker rm -f kubeadm || true'
#      - 'docker rmi -f  fanux/kubeadm:kubeadm-v{{ k8s_version }} || true'

- name: generate kubeadm config
  template: src=/etc/ansible/roles/kubernetes/templates/kubeadm.yaml.j2 dest=/tmp/kube/conf/kubeadm.yaml mode=0644

- name: generate calico config
  template: src=/etc/ansible/roles/kubernetes/templates/calico.yaml.j2 dest=/tmp/kube/conf/net/calico.yaml mode=0644

#- name: generate calico config
#  template: src=/etc/ansible/roles/kubernetes/templates/kubernetes.repo.j2 dest=/etc/yum.repos.d/kubernetes.repo mode=0644

- name: run kubeadm
  shell: 'cd /tmp/kube/shell && {{ item }}'
  with_items:
  - sh init.sh && sh master.sh

- name: clone prometheus operator
  shell: '{{ item }}'
  with_items:
     - 'rm -rf prometheus-operator'
     - 'git clone https://github.com/coreos/prometheus-operator'
#    - 'kubectl --namespace monitoring port-forward svc/prometheus-k8s 9090'
#    - 'kubectl --namespace monitoring port-forward svc/grafana 3000'
#    - 'kubectl --namespace monitoring port-forward svc/alertmanager-main 9093'

- name: "Add grafana Nodeport"
  lineinfile:
     dest: "prometheus-operator/contrib/kube-prometheus/manifests/grafana-service.yaml"
     line: "  type: NodePort"
     insertafter: 'targetPort'
 
- name: "add grafana nodeport"
  lineinfile:
     dest: "prometheus-operator/contrib/kube-prometheus/manifests/grafana-service.yaml"
     line: "    nodePort: 30000"
     insertafter: 'targetPort'

- name: create prometheus operator
  shell: '{{ item }}'
  with_items:
     - 'cd prometheus-operator/contrib/kube-prometheus/ && kubectl create -f manifests/ || true'
     - 'cd prometheus-operator/contrib/kube-prometheus/ && cp -r manifests /tmp/kube/conf/prometheus'

- name: save docker images and tar
  shell: 'cd /tmp/kube/images && {{ item }}'
  with_items:
  -  docker save -o images.tar $(docker images|grep ago|awk '{print $1":"$2}')

- name:  tar
  shell: 'cd /tmp && {{ item }}'
  with_items:
  - tar zcvf kube{{ k8s_version }}.tar.gz kube
